"Static variable":-

Static variable are also called class variable because there value does not change according to the object.i.e value of class varible remains same for all the 
object that's why they are called static variable because there value does not change.

In java or c++ they used static keyword to declare static variable.but in python we don't static keyword we directly declare the variable inside the class.

Example:-

# Python program to show that the variables with a value 
# assigned in class declaration, are class variables
 
# Class for Computer Science Student
class CSStudent:
    stream = 'cse'                  # Class Variable
    def __init__(self,name,roll):
        self.name = name            # Instance Variable
        self.roll = roll            # Instance Variable
 
# Objects of CSStudent class
a = CSStudent('Geek', 1)
b = CSStudent('Nerd', 2)
 
print(a.stream)  # prints "cse"
print(b.stream)  # prints "cse"
print(a.name)    # prints "Geek"
print(b.name)    # prints "Nerd"
print(a.roll)    # prints "1"
print(b.roll)    # prints "2"
 
# Class variables can be accessed using class
# name also
print(CSStudent.stream) # prints "cse"


Note:- if you change the value of class variable through object then it will not change the value of class variable but creat an instance 
variable for that object.If you want to change the value of class variable then change it through class name.

Example:- 

class abc(object):
    class_variable = 10# class variable

    def __init__(self):
        self.class_variable =11 # it will creat instance variable because we are accessing it through instance
        abc.class_variable = 12 # it will change the class_variable to 12 because it is accessing through class


obj = abc()
print(obj.class_variable)# it will print 11 because under __init__ we have creat a instance variable by accessing class_variable through self
print(abc.class_variable) # it will print 12 because we are accessing it through class ie abc

# NOTE: if we comment out self.class_variable in __init__ then obj.class_variable will access the class variable itself






