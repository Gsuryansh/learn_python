There are basically two type of exception in python.

1. Python built in exception.
2. User defined exception.


Python built in exception:- 

import  sys
"""random_list=['a',0,2.0]
for value in random_list:
    try:
        r=1/value
    except:
        print(sys.exc_info()[0])#this will print the type of error
print("Reciprocal is",r)"""
"""The above code will catch all the exception"""

"""Catching specific exception the below code will catch the specific exception"""

"""try:
   # do something
   pass

except ValueError: #value error means if you get other value the expected
   # handle ValueError exception
   pass

except (TypeError, ZeroDivisionError):
   # handle multiple exceptions
   # TypeError and ZeroDivisionError
   pass

except:
   # handle all other exceptions
   pass"""

"""a=10
b="abc"
try:
    print(a+b)#This will throw TypeError because we are adding int and string
except:
    print(sys.exc_info()[0])#type error means if u do operation with two different type of values"""

"""Raising exception from ourself for rasing exception we will use raise"""

"""try:
    a = int(input("Enter a positive integer: "))
    if a <= 0:
       raise ValueError("That is not a positive number!")
except ValueError as ve:
    print(ve)"""


"""Finally block"""

try:
   f = open("test.txt",encoding = 'utf-8')
   # perform file operations
finally:
   f.close()#finally block will always execute wheather try will raise an exception or not.
   
   
   
""" ELSE block """ 


try:

     some piece of code

except:

     Some code
	 
else:

     It will only excute if try block will not raise any exception.


	 
     	 
    